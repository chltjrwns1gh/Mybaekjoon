class Stack:
	def __init__(self):
		self.height = -1
		self.item = []
		# height means "position of latest component"
	def push(self,newone):
		self.height += 1
		self.item.append(newone)
	def pop(self):
		if self.empty():
			return -1
		temp = self.item[self.height]
		self.item = self.item[:self.height]
		self.height -= 1
		return temp
	def size(self):
		return self.height+1
	def empty(self):
		if self.height == -1:
			return 1
		return 0
	def top(self):
		if self.empty():
			return -1
		return self.item[-1]

import sys
input = sys.stdin.readline
casenum = int(input().strip())
testcase = []
for i in range(casenum):
	temp = input().strip().split(' ')
	testcase.append(temp)

stack1 = Stack()
for i in testcase:
	if i[0] == 'push':
		stack1.push(int(i[1]))
	elif i[0] == 'pop':
		print(stack1.pop())
	elif i[0] == 'size':
		print(stack1.size())
	elif i[0] == 'empty':
		print(stack1.empty())
	elif i[0] == 'top':
		print(stack1.top())
