def find(square1, square2):
    # print("xcode = %s\nycode = %s"%(xcode(square1, square2), ycode(square1, square2)))
    if xcode(square1, square2) == 'square' and ycode(square1, square2) == 'square':
        # print("square and square")
        return 'a'
    elif xcode(square1, square2) == 'square' and ycode(square1, square2) == 'line':
        # print("square and line")
        return 'b'
    elif xcode(square1, square2) == 'line' and ycode(square1, square2) == 'square':
        # print("line and square")
        return 'b'
    elif xcode(square1, square2) == 'line' and ycode(square1, square2) == 'line':
        # print("line and line")
        return 'c'
    else:
        # print("else")
        return 'd'


def xcode(square1, square2):
    # 'out'
    # 'square'
    # 'line'
    if square2[1] < square1[0]:
        # sq2[0] < sq2[1] < sq1[0] < sq1[1]
        return 'out'
    elif square2[1] == square1[0]:
        # sq2[0] < sq2[1] == sq1[0] < sq1[1]
        return 'line'
    elif square2[0] < square1[0] < square2[1]:
        # sq2[0] < sq1[0] < sq2[1] (sq1[1] anywhere)
        return 'square'
    elif square1[0] <= square2[0] < square1[1]:
        # sq[1] <= sq2[0] < sq1[1] ( sq2[1] anywhere)
        return 'square'
    elif square2[0] == square1[1]:
        # sq1[0] < sq1[1] == sq2[0] < sq2[1]
        return 'line'
    else:
        # else
        return 'out'


def ycode(square1, square2):
    # 'out'
    # 'square'
    # 'line'
    if square2[1+2] < square1[0+2]:
        return 'out'
    elif square2[1+2] == square1[0+2]:
        return 'line'
    elif square2[0+2] < square1[0+2] < square2[1+2]:
        return 'square'
    elif square1[0+2] <= square2[0+2] < square1[1+2]:
        return 'square'
    elif square2[0+2] == square1[1+2]:
        return 'line'
    else:
        return 'out'


for i in range(4):
    input_txt = list(map(int, input().split()))
    sq1 = input_txt[:4]
    sq1 = [sq1[0], sq1[2], sq1[1], sq1[3]]
    sq2 = input_txt[4:]
    sq2 = [sq2[0], sq2[2], sq2[1], sq2[3]]
    print(find(sq1, sq2))
